
scalar GraphQLDate

enum StatusType {
    New
    Assigned
    Fixed
    Closed
}

type Issue {
    _id:ID!
    id: Int!
    title: String!
    status: StatusType!
    Owner: String
    effort: Int
    created: GraphQLDate!
    due: GraphQLDate
    description: String
}

type IssueCounts {
 Owner: String!
 New: Int
 Assigned: Int
 Fixed: Int
 Closed: Int
}


"Toned down Issue, used as inputs, without server generated values"
input IssueInputs {
    title: String!
    "Optional, if not supplied it will be set to 'New'"
    status: StatusType = New
    Owner: String
    effort: Int
    due: GraphQLDate
    description: String
}
"""Inputs for issueUpdate: all are optional. Whichever is specified will
be set to the given value, undefined fields will remain unmodified."""
input IssueUpdateInputs {
 title: String
 status: StatusType
 Owner: String
 effort: Int
 due: GraphQLDate
 description: String
}

### Top level declarations

type Query {
    about: String!
    issueList(
 status: StatusType
 effortMin: Int
 effortMax: Int
 ): [Issue!]!
   issue(id: Int!): Issue!
   issueCounts(
 status: StatusType
 effortMin: Int
 effortMax: Int
 ): [IssueCounts!]!
}

type Mutation {
    setAboutMessage(message: String!): String
    issueDelete(id: Int!): Boolean!
    issueAdd(issue: IssueInputs!): Issue!
    issueUpdate(id: Int!, changes: IssueUpdateInputs!): Issue!
}
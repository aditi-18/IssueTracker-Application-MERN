{"version":3,"sources":["webpack:///./src/Search.jsx"],"names":["Search","React","Component","constructor","props","onChangeSelection","bind","loadOptions","value","history","push","term","length","query","showError","data","graphQLFetch","search","issueList","issues","map","issue","label","id","title","render","DropdownIndicator","withRouter","withToast"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;CACkD;;AAClD;AACA;AACA;;AACA,MAAMA,MAAN,SAAqBC,4CAAK,CAACC,SAA3B,CAAqC;AACpCC,aAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACC;;AACDD,mBAAiB,CAAC;AAAEG;AAAF,GAAD,EAAY;AAC7B,UAAM;AAAEC;AAAF,QAAc,KAAKL,KAAzB;AACAK,WAAO,CAACC,IAAR,CAAc,SAAQF,KAAM,EAA5B;AACC;;AACgB,QAAXD,WAAW,CAACI,IAAD,EAAO;AACxB,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB,OAAO,EAAP;AACrB,UAAMC,KAAK,GAAI;AAChB;AACA;AACA;AACA,GAJC;AAKA,UAAM;AAAEC;AAAF,QAAgB,KAAKV,KAA3B;AACA,UAAMW,IAAI,GAAG,MAAMC,gEAAY,CAACH,KAAD,EAAQ;AAAEI,YAAM,EAAEN;AAAV,KAAR,EAA0BG,SAA1B,CAA/B;AACA,WAAOC,IAAI,CAACG,SAAL,CAAeC,MAAf,CAAsBC,GAAtB,CAA0BC,KAAK,KAAK;AAC3CC,WAAK,EAAG,IAAGD,KAAK,CAACE,EAAG,KAAIF,KAAK,CAACG,KAAM,EADO;AACJhB,WAAK,EAAEa,KAAK,CAACE;AADT,KAAL,CAA/B,CAAP;AAGC;;AACDE,QAAM,GAAG;AACT,wBACA,2DAAC,6DAAD;AACA,gBAAU,EAAC,eADX;AAEA,WAAK,EAAC,EAFN;AAGA,iBAAW,EAAE,KAAKlB,WAHlB;AAIA,kBAAY,EAAE,MAAM,IAJpB;AAKA,cAAQ,EAAE,KAAKF,iBALf;AAMA,gBAAU,EAAE;AAAEqB,yBAAiB,EAAE;AAArB;AANZ,MADA;AAUC;;AAlCmC;;AAoCtBC,kIAAU,CAACC,8DAAS,CAAC5B,MAAD,CAAV,CAAzB,E","file":"server.e00d72050626419aecdb.hot-update.js","sourcesContent":["import React from 'react';\r\nimport SelectAsync from 'react-select/lib/Async'; // eslint-disable-line\r\nimport { withRouter } from 'react-router-dom';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport withToast from './withToast.jsx';\r\nclass Search extends React.Component {\r\n constructor(props) {\r\n super(props);\r\n this.onChangeSelection = this.onChangeSelection.bind(this);\r\n this.loadOptions = this.loadOptions.bind(this);\r\n }\r\n onChangeSelection({ value }) {\r\n const { history } = this.props;\r\n history.push(`/edit/${value}`);\r\n }\r\n async loadOptions(term) {\r\n if (term.length < 3) return [];\r\n const query = `query issueList($search: String) {\r\n issueList(search: $search) {\r\n issues {id title}\r\n }\r\n }`;\r\n const { showError } = this.props;\r\n const data = await graphQLFetch(query, { search: term }, showError);\r\n return data.issueList.issues.map(issue => ({\r\n label: `#${issue.id}: ${issue.title}`, value: issue.id,\r\n }));\r\n }\r\n render() {\r\n return (\r\n <SelectAsync\r\n instanceId=\"search-select\"\r\n value=\"\"\r\n loadOptions={this.loadOptions}\r\n filterOption={() => true}\r\n onChange={this.onChangeSelection}\r\n components={{ DropdownIndicator: null }}\r\n />\r\n );\r\n }\r\n}\r\nexport default withRouter(withToast(Search));"],"sourceRoot":""}